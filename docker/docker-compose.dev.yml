version: '3.8'

services:
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.dev.dockerfile
    container_name: nextjs-frontend
    ports:
      - "3000:3000"
    volumes:
      - ../apps/frontend:/app/apps/frontend
      - ../packages:/app/packages
      - frontend-node-modules:/app/apps/frontend/node_modules
      - packages-node-modules:/app/packages/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
      - WATCHPACK_POLLING=true
    depends_on:
      - mock-backend
    networks:
      - app-network

  mock-backend:
    build:
      context: ..
      dockerfile: docker/mock-backend.dockerfile
    container_name: mock-backend
    ports:
      - "3001:3001"
    volumes:
      - ../apps/mock-backend:/app/apps/mock-backend
      - ../packages:/app/packages
      - backend-node-modules:/app/apps/mock-backend/node_modules
      - packages-node-modules:/app/packages/node_modules
    environment:
      - NODE_ENV=development
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3000
      - LOG_LEVEL=debug
    networks:
      - app-network

  # Optional: Uncomment to add PostgreSQL for future expansion
  # postgres:
  #   image: postgres:16-alpine
  #   container_name: postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=postgres
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_DB=app_db
  #   volumes:
  #     - postgres-data:/var/lib/postgresql/data
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge

volumes:
  frontend-node-modules:
  backend-node-modules:
  packages-node-modules:
  # postgres-data:
